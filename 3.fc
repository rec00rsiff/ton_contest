int equal_slices (slice a, slice b) asm "SDEQ";

;; testable
() recv_internal (int balance, int msg_value, cell in_msg_full, slice in_msg_body) {
  
  var cdata_slice = get_data().begin_parse();

  slice manager_address = cdata_slice~load_msg_addr();

  int op = in_msg_body~load_uint(32);
  int query_id = in_msg_body~load_uint(64);

  if (op == 1) {
    slice msg_full_slice = in_msg_full.begin_parse();
    msg_full_slice~load_uint(4);

    if(equal_slices(manager_address, msg_full_slice~load_msg_addr())) {

      slice memorized_address = in_msg_body~load_msg_addr();
      set_data(begin_cell().store_slice(manager_address).store_slice(memorized_address).end_cell());
    }

    return ();
  }

  if (op == 2) {

    slice msg_full_slice = in_msg_full.begin_parse();
    msg_full_slice~load_uint(4);

    slice sender_address = msg_full_slice~load_msg_addr();

    slice memorized_address = cdata_slice~load_msg_addr();

    var msg = begin_cell()
          .store_uint(0x10, 6)
          .store_slice(sender_address)
          .store_uint(0, 5 + 4 + 4 + 64 + 32 + 1 + 1) ;; 4(grams) + 1
          .store_uint(3, 32)
          .store_uint(query_id, 64)
          .store_slice(manager_address)
          .store_slice(memorized_address)
        .end_cell();
     send_raw_message(msg, 64);

     return ();
  }
  
  throw(500);
}
